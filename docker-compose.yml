version: "3.9"
services:
  sonarqube:
    image: sonarqube
    ports:
      - 9000:9000
    env_file:
      - .env
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/${DB_NAME}
      - SONARQUBE_JDBC_USERNAME=${DB_USERNAME}
      - SONARQUBE_JDBC_PASSWORD=${DB_PASSWORD}
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_temp:/opt/sonarqube/temp
      - ./script:/script
    networks:
      - sonar_network
    depends_on:
      db:
        condition: service_started

  db:
    image: postgres
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgresql:/var/lib/postgresql
    networks:
      - sonar_network

  update-user:
    image: node:20-alpine
    env_file:
      - .env
    environment:
      - SONAR_HOST_URL=http://sonarqube:9000
    networks:
      - sonar_network
    volumes:
      - ./script:/script
    command: sh -c "node /script/updateUser.js"

  scanner:
    image: sonarsource/sonar-scanner-cli
    env_file:
      - .env
    depends_on:
      update-user:
        condition: service_started
    volumes:
      - .:/usr/src
    environment:
      - SONAR_HOST_URL=http://sonarqube:9000
      - SONAR_LOGIN=${SONAR_USERNAME}
      - SONAR_PASSWORD=${SONAR_PASSWORD}
    networks:
      - sonar_network

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonarqube_temp:
  postgresql:

networks:
  sonar_network:
    driver: bridge
